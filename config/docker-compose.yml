version: '3.8'

services:
  # Backend Flask
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: asistente-hdl-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - HOST=0.0.0.0
      - PORT=5000
      - DATABASE_URL=postgresql://hdl_user:hdl_password@postgres:5432/asistente_hdl
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - asistente-network

  # Frontend React (servido por Nginx)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: asistente-hdl-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - asistente-network

  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: asistente-hdl-postgres
    environment:
      - POSTGRES_DB=asistente_hdl
      - POSTGRES_USER=hdl_user
      - POSTGRES_PASSWORD=hdl_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - asistente-network

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: asistente-hdl-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - asistente-network

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: asistente-hdl-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - asistente-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  asistente-network:
    driver: bridge

